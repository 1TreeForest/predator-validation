/**
 * Copyright 2024
 * @license Apache-2.0, see License.md for full details.
 */
import{LitElement as t}from"../../lit/index.js";import{SimpleColorsSuper as e}from"../simple-colors/simple-colors.js";import{DDDReset as l,DDDAllStyles as s,DDDFonts as o}from"./lib/DDDStyles.js";export function loadDDDFonts(){globalThis&&globalThis.document&&!globalThis.document.querySelector('[data-ddd="font"]')&&o.forEach((t=>{const e=globalThis.document.createElement("link");e.setAttribute("href",t),e.setAttribute("rel","stylesheet"),e.setAttribute("fetchpriority","low"),e.setAttribute("data-ddd","font"),globalThis.document.head.appendChild(e)}))}export function dddCSSFeatureDetection(){CSS.supports("initial-letter","1")||(console.warn("CSS feature: initial-letter not supported"),console.warn("Adding dropCap-noSupport class"),document.body.classList.add("dropCap-noSupport"))}export const DDDSuper=function(t){return class extends t{constructor(){super(),globalThis.DDDSharedStyles.requestAvailability()}static get styles(){let t=[];return super.styles&&(t=super.styles),[t,l]}}};class DDD extends(DDDSuper(e(t))){constructor(){super()}static get tag(){return"d-d-d"}}globalThis.customElements.define(DDD.tag,DDD);export{DDD};globalThis.DDDSharedStyles=globalThis.DDDSharedStyles||{},globalThis.DDDSharedStyles.requestAvailability=()=>{if(null==globalThis.DDDSharedStyles.instance){let t=s.map((t=>t.cssText?t.cssText:"")).join("");const e=new CSSStyleSheet;e.replaceSync(t),e.hax=!0,globalThis.document.adoptedStyleSheets=[...globalThis.document.adoptedStyleSheets,e],loadDDDFonts(),globalThis.document.onload=dddCSSFeatureDetection(),globalThis.DDDSharedStyles.instance=e}return globalThis.DDDSharedStyles.instance};export const DDDSharedStylesGlobal=globalThis.DDDSharedStyles.requestAvailability();export{o as DDDFonts};